@model JetMedicalWebApp.Areas.Admin.Models.GroupsViewModels
@{
    ViewBag.Title = "Groups";
    Layout = "~/Areas/Admin/Views/Shared/_SnailSoft.cshtml";
}

@section Vendors_CSS{
    <link rel="stylesheet" href="@Url.Content("~/Content/DataTables/DataTables-1.10.18/css/jquery.dataTables.min.css")" type="text/css">
    <link rel="stylesheet" href="@Url.Content("~/Content/DataTables/DataTables-1.10.18/css/dataTables.bootstrap4.min.css")" type="text/css">
    <link rel="stylesheet" href="@Url.Content("~/Content/DataTables/Responsive-2.2.2/css/responsive.bootstrap.min.css")" type="text/css">
}

@section HeaderScript{
    <link rel="stylesheet" href="@Url.Content("~/Content/css/customiseDatatable.css")" type="text/css">
}
@section Vendors_Scripts{
    <script type="text/javascript" src="@Url.Content("~/Content/DataTables/DataTables-1.10.18/js/jquery.dataTables.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Content/DataTables/DataTables-1.10.18/js/dataTables.bootstrap4.min.js")"></script>
}

@section FooterScript{
    <script type="text/javascript" src="@Url.Content("~/Content/js/customiseDatatable.js")"></script>
}

<script type="text/javascript" charset="utf-8">
    var selectedDataRow = null;
    var table;
    var dataListId = [];

    let userId ='@Model.UsersID';
    let suaHeThong=@if (Model.Menu_GroupPermission.SystemEdit == true) { <text>true</text>} else { <text>false</text>};
    let suaCaNhan=@if (Model.Menu_GroupPermission.PersonalEdit == true) { <text>true</text>} else { <text>false</text>};
    let xemHeThong=@if (Model.Menu_GroupPermission.SystemView == true) { <text>true</text>} else { <text>false</text>};
    let xemCaNhan=@if (Model.Menu_GroupPermission.PersonalView == true) { <text>true</text>} else { <text>false</text>};
    let xoaHeThong=@if (Model.Menu_GroupPermission.SystemDelete == true) { <text>true</text>} else { <text>false</text>};
    let xoaCaNhan=@if (Model.Menu_GroupPermission.PersonalDelete == true) { <text>true</text>} else { <text>false</text>};

    $(document).ready(function () {
        let resizeObserver = new ResizeObserver(() => {
            if (typeof (table) !== 'undefined') {
                table.columns.adjust();
            }
        });
        resizeObserver.observe($('#vdContentContainer')[0]);


        let selectedFields = "GroupID, GroupName, Active, Notes, (CreatedUsers != null ? CreatedUsers.UserID : -1) AS CreatedUserID";

        var datatableOption = initialDatatableOption();
        datatableOption.ajax.url = '@Url.Action("GetList", "Groups", new { area = "Admin" })';
        datatableOption.ajax.data = {
            selectedFields: function () {
                return selectedFields;
            },
            stringFilter: function () {
                let stringFilter = '';

                if (!isNullOrEmpty($('#quickSearch').val())) {
                    if (!isNullOrEmpty(stringFilter)) {
                        stringFilter += ' AND ';
                    }

                    var search = $('#quickSearch').val().trim();
                    stringFilter += '(GroupName.Contains("' + search + '") OR Notes.Contains("' + search + '"))';
                }

                if (xemHeThong == false && (xemCaNhan == true)) {
                    if (!isNullOrEmpty(stringFilter)) {
                        stringFilter += ' AND ';
                    }
                    stringFilter += 'CreatedUserID =' + userId;
                }

                return stringFilter;
            }
        };


        datatableOption.drawCallback = function (settings) {
            table.columns.adjust();
        };

        datatableOption.initComplete = function () {
            this.api().columns().every(function (index) {
                var headerName = $(this.header()).text();
                var column = this;
                if (index == 0) {
                    $(column.header()).html('<div class="controls"><div class="vd_checkbox checkbox-success">\
                                <input type="checkbox" id="checkbox-select-all">\
                                <label for="checkbox-select-all"></label>\
                            </div></div>');
                }

                table.columns.adjust();
            });

            $('#checkbox-select-all').off('change').on('change', function () {
                $('#dtTable tbody input:checkbox[name="checkboxSelected"]').prop('checked', this.checked);
            });
        };

        datatableOption.order = [[0, "ASC"]];
        datatableOption.columnDefs = [
            {
                "targets": "_all",
                "orderable": false
            },
            {
                "targets": [0],
                className: 'dt-body-center',
                "searchable": false
            },
            {
                "targets": [3],
                className: 'dt-body-center',
                "searchable": false,
                   @if (Model.Menu_GroupPermission != null && !Model.Menu_GroupPermission.AllowUpdate)
                {
                    <text>
                visible: false
                </text>
                }
            },
            {
                "targets": [4],
                className: 'dt-body-center menu-action',
                "orderable": false,
                "searchable": false,
                @if (Model.Menu_GroupPermission != null && !Model.Menu_GroupPermission.AllowUpdate)
                {
                    <text>
                visible: false
                </text>
                }
            },
            {
                "targets": [5],
                className: 'dt-body-center menu-action',
                "orderable": false,
                "searchable": false,
                @if (Model.Menu_GroupPermission != null && !Model.Menu_GroupPermission.AllowDelete)
                {
                    <text>
                visible: false
                </text>
                }
            }
        ];

        datatableOption.columns = [
            {
                "width": "20px", "data": "GroupID", "name": "GroupID", "autoWidth": true,
                "render": function (data, type, full, meta) {
                    return '<div class="controls"><div class="vd_checkbox checkbox-success">\
                            <input type="checkbox" id="checkboxSelected_' + full.GroupID + '" name="checkboxSelected">\
                            <label for="checkboxSelected_' + full.GroupID + '"></label>\
                        </div></div>';
                }
            },
            { "data": "GroupName", "name": "GroupName", "autoWidth": true, "title": "Name" },
            { "data": "Notes", "name": "Notes", "autoWidth": true, "title": "Notes" },
            {
                "data": "Active", "name": "Active", "autoWidth": true, "title": "Kích hoạt", "render": function (data, type, full, meta) {
                    let content = '<div class="controls"><div class="vd_checkbox checkbox-success">\
                                    <input type="checkbox" id="checkboxActive_' + full.GroupID + '" value="" ' + (data == true ? 'checked' : '') + (suaHeThong == true || (suaCaNhan == true && full.CreatedUserID == userId) ? ' onclick="updateCellDatatable(this)"' : ' disabled') + ' data-rowId="' + meta.row + '" data-colId="' + meta.col + '" data-id="' + full.GroupID + '"' + (data == true ? ' checked ' : '') + ' data-field="Active" data-value="' + !data + '">\
                                    <label for="checkboxActive_' + full.GroupID + '"></label>\
                                  </div></div>';
                    return content;
                }
            },
            {
                "mRender": function (data, type, row, meta) {
                    let html='';
                    if (suaHeThong == true || (suaCaNhan == true && row.CreatedUserID == userId)) {
                        html = '<div class="d-flex order-actions"><a data-original-title="edit" data-toggle="tooltip" data-placement="top" class="btnEdit" href="javascript:void(0)"> <i class="bx bxs-edit"></i> </a></div>';
                    }
                    return html ;
                },width: "30px"
            },
            {
                "mRender": function (data, type, row, meta) {
                    let html='';
                    if (xoaHeThong == true || (xoaCaNhan == true && row.CreatedUserID == userId)) {
                        html = '<div class="d-flex order-actions"><a data-original-title="delete" data-toggle="tooltip" data-placement="top" class="" onclick=deleteDataRow(' + row.Id + ')> <i class="bx bxs-trash"></i> </a></div>';
                    }
                    return html ;
                }, width: "30px"
            }
        ]

        table = $('#dtTable').DataTable(datatableOption);

        $('#dtTable tbody').on('click', 'tr', function () {
            if ($(this).hasClass('selected')) {
                $(this).removeClass('selected');
            }
            else {
                table.$('tr.selected').removeClass('selected');
                $(this).addClass('selected');
            }
            selectedDataRow = table.row($(this)).data();
        });

        $('#dtTable tbody').on('click', 'tr td.menu-action > .order-actions >a.btnEdit', function () {
            selectedDataRow = table.row($(this).parents('tr')).data();
            $('#GroupName').val(selectedDataRow.GroupName);
            $('#Notes').val(selectedDataRow.Notes);
            $('#Active').prop('checked', selectedDataRow.Active);
            $('#addOrUpdateModal').modal('show');
        });

        $("#btnRefreshData").click(function () {
            resetCheckboxAndTable();
        });

        $("#btnAdd").click(function () {
            selectedDataRow = null;
            $('#formUpdate')[0].reset();
            $('#addOrUpdateModal').modal('show');
        });

        $("#btnThucHienLuu").click(function () {
            addOrUpdate(selectedDataRow);
        });

        $('#btnDelete').click(function () {
            dataListId = [];
            dataListId = $(table.$('input:checkbox[name="checkboxSelected"]').map(function () {
                return $(this).prop("checked") ? table.rows($(this).closest('tr')).data()[0].GroupID : null;
            }));

            if (dataListId.length > 0) {
                $('#confirmDeleteDataRowModal').modal('show');
            } else {
                notification("topcenter", "", "fa fa-exclamation-triangle vd_yellow", "", "Bạn chưa chọn dòng nào để xóa.");
            }
        });

        $('#btnExecuteDeleted').click(function (e) {
            e.preventDefault();

            if (dataListId.length > 0) {
                var data = { ids: dataListId.length == 1 ? dataListId[0] : dataListId.toArray() };
                var url = "@Url.Action("DeleteByIds", "Groups", new { area = "Admin" })";

                sendDataToURL(url, data, true, null)
                .then(function (res) {
                    if (res) {
                        notification("top right", "info", "fadeIn animated bx bx-info-circle", "", res);
                    }
                    else {
                        notification("top right", "success", "fadeIn animated bx bx-check-circle", "", "Xóa thành công.");
                        $('#confirmDeleteDataRowModal').modal('hide');
                        resetCheckboxAndTable();
                    }
                });
            }
        });
    });

    function deleteDataRow(id) {
        dataListId.push(id);
        $('#confirmDeleteDataRowModal').modal('show');
    }

    function resetCheckboxAndTable() {
        table.draw();
        $('#formUpdate')[0].reset();
        dataListId = [];
        $('#checkbox-select-all').prop('checked', false);
        selectedDataRow = null;
    }

    function addOrUpdate(selectedDataRow) {

        if (!isNullOrEmpty($('#GroupName').val())) {
            var fields = ['GroupName','Notes','Active'];
            var values = [
                $('#GroupName').val(),
                $('#Notes').val(),
                $('#Active').is(':checked')
            ];

            var data = {
                id: selectedDataRow != null ? selectedDataRow.GroupID : null,
                fields: fields,
                values: values
            };
            var url = "@Url.Action("AddOrUpdate", "Groups", new { area = "Admin" })";

            sendDataToURL(url, data, true, null)
            .then(function (res) {
                if (res) {
                    notification("top right", "info", "fadeIn animated bx bx-info-circle", "", res);
                }
                else {
                    notification("top right", "success", "fadeIn animated bx bx-check-circle", "", "Cập nhật thành công.");
                    resetCheckboxAndTable();
                }
            });
        } else {
            notification("top right", "info", "fadeIn animated bx bx-info-circle", "", 'Vui lòng nhập nhóm người dùng.');
        }
    }

    function updateCellDatatable(that) {
        var data = {
            id: $(that).data("id"),
            fields: [$(that).data("field")],
            values: [$(that).data("value")]
        };
        var url = "@Url.Action("AddOrUpdate", "Groups", new { area = "Admin" })";

        sendDataToURL(url, data, false, null)
        .then(function (res) {
            if (res) {
                notification("top right", "error", "fadeIn animated bx bx-error", "", res);
            }
            resetCheckboxAndTable();
        });
    }
</script>

@Html.Partial("_PartialContentHeader")


<div class="card">
    <div class="card-body">
        <div class="table-responsive">
            <div id="example_wrapper" class="dataTables_wrapper dt-bootstrap5">

                <div class="row">
                    <div class="col-sm-12 col-md-6">
                        <div class="dt-buttons btn-group">
                            <div id="example2_filter" class="dataTables_filter">
                                <label>
                                    Search:
                                    <input type="search" class="form-control " placeholder="" aria-controls="example2" id="quickSearch" onchange="resetCheckboxAndTable()">
                                </label>
                            </div>


                        </div>
                    </div>
                    <div class="col-sm-12 col-md-6">
                        <div id="example2_filter" class="dataTables_filter">
                            <button class="btn buttons-excel buttons-html5 btn-primary" id="btnRefreshData" tabindex="0" aria-controls="example2" type="button"><span>Refresh</span></button>

                            @if (Model.Menu_GroupPermission.SystemEdit == true || Model.Menu_GroupPermission.PersonalEdit == true)
                            {
                                <button class="btn buttons-excel buttons-html5 btn-primary" id="btnAdd" tabindex="0" aria-controls="example2" type="button"><span>Thêm mới</span></button>
                            }

                            @if (Model.Menu_GroupPermission.SystemDelete == true)
                            {
                                <button class="btn buttons-excel buttons-html5 btn-primary" id="btnDelete" tabindex="0" aria-controls="example2" type="button"><span>Xóa</span></button>
                            }
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12">
                        <table id="dtTable" class="table table-bordered dataTable" cellspacing="0"></table>

                    </div>
                </div>

            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="addOrUpdateModal" aria-labelledby="addOrUpdateModalLabel" aria-modal="true" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addOrUpdateModalLabel">@Html.Raw("Cập nhật")</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="formUpdate">
                    <div class="row mb-2">
                        <label for="inputEnterYourName" class="col-sm-4 col-form-label">Tên nhóm</label>
                        <div class="col-sm-8">
                            <input type="text" class="form-control" id="GroupName" placeholder="Tên nhóm">
                        </div>
                    </div>



                    <div class="row mb-2">
                        <label for="inputEnterYourName" class="col-sm-4 col-form-label">Ghi chú</label>
                        <div class="col-sm-8">
                            <input type="text" class="form-control" id="Notes">
                        </div>
                    </div>


                    <div class="row mb-2">
                        <label for="inputAddress4" class="col-sm-4 col-form-label"></label>
                        <div class="col-sm-8">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="Active">
                                <label class="form-check-label" for="Active">@Html.Raw("Kích hoạt")</label>
                            </div>
                        </div>
                    </div>

                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success" id="btnThucHienLuu"><i class="lni lni-save"></i>@Html.Raw("Lưu")</button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal"><i class="lni lni-ban"></i>@Html.Raw("Đóng")</button>
            </div>
        </div>
    </div>
</div>


@Html.Partial("PartialConfirmDeleteModal")
@Html.Partial("_PartialNotificationModal")
